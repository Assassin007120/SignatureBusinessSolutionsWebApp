@model SignatureBusinessSolutionsWebApp.Models.InformationModel

@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(x => x.ApplicationUserId)

    <div class="m-4">
        <div class="card card-primary">
            <div class="card-header">
                <div class="card-title text-bold">
                    <i class="fas fa-list"></i>
                    Information
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-6">
                        @Html.LabelFor(model => model.TelNo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.TelNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TelNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-6">
                        @Html.LabelFor(model => model.CellNo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CellNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CellNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row pt-2">
                    <div class="col-6">
                        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-6">
                        @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row pt-2">
                    <div class="col-6">
                        @Html.LabelFor(model => model.AddressLine3, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AddressLine3, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine3, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-6">
                        @Html.LabelFor(model => model.AddressCode, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AddressCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row pt-2">
                    <div class="col-6">
                        @Html.LabelFor(model => model.PostalAddress1, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.PostalAddress1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostalAddress1, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-6">
                        @Html.LabelFor(model => model.PostalAddress2, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.PostalAddress2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostalAddress2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row pt-2">
                    <div class="col-6">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-6">
                    </div>
                </div>
                <div class="form-group pt-3">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success btn-lg saveBtn" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(".saveBtn").on("click", function (e) {
            e.preventDefault();

            var telNo = $("#TelNo").val();
            var cellNo = $("#CellNo").val();
            var addressLine1 = $("#AddressLine1").val();
            var addressLine2 = $("#AddressLine2").val();
            var addressLine3 = $("#AddressLine3").val();
            var addressCode = $("#AddressCode").val();
            var postalAddress1 = $("#PostalAddress1").val();
            var postalAddress2 = $("#PostalAddress2").val();
            var postalCode = $("#PostalCode").val();

            var model = {
                TelNo: telNo,
                CellNo: cellNo,
                AddressLine1: addressLine1,
                AddressLine2: addressLine2,
                AddressLine3: addressLine3,
                AddressCode: addressCode,
                PostalAddress1: postalAddress1,
                PostalAddress2: postalAddress2,
                PostalCode: postalCode
            };

            console.log(model);

            Swal.fire({
                title: 'Save User Information',
                text: "Would you like to save your information?",
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#0D6EFD',
                cancelButtonColor: '#DC3545',
                confirmButtonText: 'Save'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: "@(Url.Action("Index", "Home"))",
                        data: {
                            model:model
                        },
                        success: function (result) {
                            console.log(result);

                            if (result.StatusCode == 200) {
                                Swal.fire({
                                    title: result.StatusTitle,
                                    text: result.StatusMessage,
                                    icon: 'success',
                                    confirmButtonColor: '#0D6EFD',
                                    confirmButtonText: 'OK!'
                                });
                            }
                            else {
                                Swal.fire({
                                    title: result.StatusTitle,
                                    text: result.StatusMessage,
                                    icon: 'error',
                                    confirmButtonColor: '#0D6EFD',
                                    confirmButtonText: 'OK!'
                                })
                            }
                        }
                    });
                };
            });

        });
    </script>
    }